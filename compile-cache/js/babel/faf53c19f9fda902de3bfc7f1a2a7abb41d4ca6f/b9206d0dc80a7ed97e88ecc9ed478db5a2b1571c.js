function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _libCanvasLayer = require('../lib/canvas-layer');

var _libCanvasLayer2 = _interopRequireDefault(_libCanvasLayer);

'use babel';

describe('CanvasLayer', function () {
  var _ref = [];
  var layer = _ref[0];

  beforeEach(function () {
    layer = new _libCanvasLayer2['default']();

    layer.setSize(100, 300);
  });

  it('has two canvas', function () {
    expect(layer.canvas).toBeDefined();
    expect(layer.offscreenCanvas).toBeDefined();
  });

  it('has a context for each canvas', function () {
    expect(layer.context).toBeDefined();
    expect(layer.offscreenContext).toBeDefined();
  });

  it('disables the smoothing for the canvas', function () {
    expect(layer.canvas.webkitImageSmoothingEnabled).toBeFalsy();
    expect(layer.offscreenCanvas.webkitImageSmoothingEnabled).toBeFalsy();

    expect(layer.context.imageSmoothingEnabled).toBeFalsy();
    expect(layer.offscreenContext.imageSmoothingEnabled).toBeFalsy();
  });

  describe('.prototype.attach', function () {
    it('attaches the onscreen canvas to the provided element', function () {
      var jasmineContent = document.body.querySelector('#jasmine-content');

      layer.attach(jasmineContent);

      expect(jasmineContent.querySelector('canvas')).toExist();
    });
  });

  describe('.prototype.resetOffscreenSize', function () {
    it('sets the width of the offscreen canvas to the ', function () {
      layer.canvas.width = 500;
      layer.canvas.height = 400;

      expect(layer.offscreenCanvas.width).toEqual(100);
      expect(layer.offscreenCanvas.height).toEqual(300);

      layer.resetOffscreenSize();

      expect(layer.offscreenCanvas.width).toEqual(500);
      expect(layer.offscreenCanvas.height).toEqual(400);
    });
  });

  describe('.prototype.copyToOffscreen', function () {
    it('copies the onscreen bitmap onto the offscreen canvas', function () {
      spyOn(layer.offscreenContext, 'drawImage');

      layer.copyToOffscreen();

      expect(layer.offscreenContext.drawImage).toHaveBeenCalledWith(layer.canvas, 0, 0);
    });
  });

  describe('.prototype.copyFromOffscreen', function () {
    it('copies the offscreen bitmap onto the onscreen canvas', function () {
      spyOn(layer.context, 'drawImage');

      layer.copyFromOffscreen();

      expect(layer.context.drawImage).toHaveBeenCalledWith(layer.offscreenCanvas, 0, 0);
    });
  });

  describe('.prototype.copyPartFromOffscren', function () {
    it('copies to the onscreen canvas the region that were specified', function () {
      spyOn(layer.context, 'drawImage');

      layer.copyPartFromOffscreen(50, 100, 150);

      expect(layer.context.drawImage).toHaveBeenCalledWith(layer.offscreenCanvas, 0, 50, 100, 150, 0, 100, 100, 150);
    });
  });

  describe('.prototype.clearCanvas', function () {
    it('clears the whole canvas region', function () {
      spyOn(layer.context, 'clearRect');

      layer.clearCanvas();

      expect(layer.context.clearRect).toHaveBeenCalledWith(0, 0, layer.canvas.width, layer.canvas.height);
    });
  });
});
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/C:/Users/Maxemilian/.atom/packages/minimap/spec/canvas-layer-spec.js
